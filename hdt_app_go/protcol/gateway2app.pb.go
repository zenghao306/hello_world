// Code generated by protoc-gen-go.
// source: gateway2app.proto
// DO NOT EDIT!

/*
Package external is a generated protocol buffer package.

It is generated from these files:
	gateway2app.proto

It has these top-level messages:
	LoginReq
	IndexReq
	UserInfo
	LoginRes
	RegisterReq
	ReturnRes
	QianxunReq
	TokenReq
	TelReq
	TokenRes
	RankingInfoRes
	AppListRes
*/
package external

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type LoginReq struct {
	Tel string `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
	Pwd string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type IndexReq struct {
	Index int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
}

func (m *IndexReq) Reset()                    { *m = IndexReq{} }
func (m *IndexReq) String() string            { return proto.CompactTextString(m) }
func (*IndexReq) ProtoMessage()               {}
func (*IndexReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type UserInfo struct {
	Uid          int64   `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	NickName     string  `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	Avatar       string  `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Sign         string  `protobuf:"bytes,4,opt,name=sign" json:"sign,omitempty"`
	Email        string  `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	RegTime      int64   `protobuf:"varint,6,opt,name=regTime" json:"regTime,omitempty"`
	HdtBalance   float64 `protobuf:"fixed64,7,opt,name=hdtBalance" json:"hdtBalance,omitempty"`
	RealnameAuth int32   `protobuf:"varint,8,opt,name=realnameAuth" json:"realnameAuth,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type LoginRes struct {
	ErrCode  int32     `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	UserInfo *UserInfo `protobuf:"bytes,2,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *LoginRes) Reset()                    { *m = LoginRes{} }
func (m *LoginRes) String() string            { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()               {}
func (*LoginRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginRes) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type RegisterReq struct {
	Tel          string `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
	Pwd          string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
	Ip           string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	RegisterFrom int32  `protobuf:"varint,4,opt,name=RegisterFrom" json:"RegisterFrom,omitempty"`
}

func (m *RegisterReq) Reset()                    { *m = RegisterReq{} }
func (m *RegisterReq) String() string            { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()               {}
func (*RegisterReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ReturnRes struct {
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
}

func (m *ReturnRes) Reset()                    { *m = ReturnRes{} }
func (m *ReturnRes) String() string            { return proto.CompactTextString(m) }
func (*ReturnRes) ProtoMessage()               {}
func (*ReturnRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type QianxunReq struct {
	Tel  string `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *QianxunReq) Reset()                    { *m = QianxunReq{} }
func (m *QianxunReq) String() string            { return proto.CompactTextString(m) }
func (*QianxunReq) ProtoMessage()               {}
func (*QianxunReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type TokenReq struct {
	Tel   string `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *TokenReq) Reset()                    { *m = TokenReq{} }
func (m *TokenReq) String() string            { return proto.CompactTextString(m) }
func (*TokenReq) ProtoMessage()               {}
func (*TokenReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type TelReq struct {
	Tel string `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
}

func (m *TelReq) Reset()                    { *m = TelReq{} }
func (m *TelReq) String() string            { return proto.CompactTextString(m) }
func (*TelReq) ProtoMessage()               {}
func (*TelReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type TokenRes struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *TokenRes) Reset()                    { *m = TokenRes{} }
func (m *TokenRes) String() string            { return proto.CompactTextString(m) }
func (*TokenRes) ProtoMessage()               {}
func (*TokenRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type RankingInfoRes struct {
	ErrCode            int32                        `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	RankingOfHdtDig    []*RankingInfoRes_HdtDigInfo `protobuf:"bytes,2,rep,name=RankingOfHdtDig" json:"RankingOfHdtDig,omitempty"`
	DegreeOfDifficulty float64                      `protobuf:"fixed64,3,opt,name=DegreeOfDifficulty" json:"DegreeOfDifficulty,omitempty"`
	MiningIndex        int32                        `protobuf:"varint,4,opt,name=MiningIndex" json:"MiningIndex,omitempty"`
	HdtMiningLast      float64                      `protobuf:"fixed64,5,opt,name=HdtMiningLast" json:"HdtMiningLast,omitempty"`
	HdtMiningTotal     float64                      `protobuf:"fixed64,6,opt,name=HdtMiningTotal" json:"HdtMiningTotal,omitempty"`
}

func (m *RankingInfoRes) Reset()                    { *m = RankingInfoRes{} }
func (m *RankingInfoRes) String() string            { return proto.CompactTextString(m) }
func (*RankingInfoRes) ProtoMessage()               {}
func (*RankingInfoRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RankingInfoRes) GetRankingOfHdtDig() []*RankingInfoRes_HdtDigInfo {
	if m != nil {
		return m.RankingOfHdtDig
	}
	return nil
}

type RankingInfoRes_HdtDigInfo struct {
	Tel string  `protobuf:"bytes,1,opt,name=tel" json:"tel,omitempty"`
	Hdt float64 `protobuf:"fixed64,2,opt,name=hdt" json:"hdt,omitempty"`
}

func (m *RankingInfoRes_HdtDigInfo) Reset()                    { *m = RankingInfoRes_HdtDigInfo{} }
func (m *RankingInfoRes_HdtDigInfo) String() string            { return proto.CompactTextString(m) }
func (*RankingInfoRes_HdtDigInfo) ProtoMessage()               {}
func (*RankingInfoRes_HdtDigInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

type AppListRes struct {
	ErrCode int32                     `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	Applist []*AppListRes_AppNameIcon `protobuf:"bytes,2,rep,name=Applist" json:"Applist,omitempty"`
}

func (m *AppListRes) Reset()                    { *m = AppListRes{} }
func (m *AppListRes) String() string            { return proto.CompactTextString(m) }
func (*AppListRes) ProtoMessage()               {}
func (*AppListRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AppListRes) GetApplist() []*AppListRes_AppNameIcon {
	if m != nil {
		return m.Applist
	}
	return nil
}

type AppListRes_AppNameIcon struct {
	AppName    string `protobuf:"bytes,1,opt,name=AppName" json:"AppName,omitempty"`
	AppIcoPath string `protobuf:"bytes,2,opt,name=AppIcoPath" json:"AppIcoPath,omitempty"`
}

func (m *AppListRes_AppNameIcon) Reset()                    { *m = AppListRes_AppNameIcon{} }
func (m *AppListRes_AppNameIcon) String() string            { return proto.CompactTextString(m) }
func (*AppListRes_AppNameIcon) ProtoMessage()               {}
func (*AppListRes_AppNameIcon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

func init() {
	proto.RegisterType((*LoginReq)(nil), "external.LoginReq")
	proto.RegisterType((*IndexReq)(nil), "external.IndexReq")
	proto.RegisterType((*UserInfo)(nil), "external.UserInfo")
	proto.RegisterType((*LoginRes)(nil), "external.LoginRes")
	proto.RegisterType((*RegisterReq)(nil), "external.RegisterReq")
	proto.RegisterType((*ReturnRes)(nil), "external.ReturnRes")
	proto.RegisterType((*QianxunReq)(nil), "external.QianxunReq")
	proto.RegisterType((*TokenReq)(nil), "external.TokenReq")
	proto.RegisterType((*TelReq)(nil), "external.TelReq")
	proto.RegisterType((*TokenRes)(nil), "external.TokenRes")
	proto.RegisterType((*RankingInfoRes)(nil), "external.RankingInfoRes")
	proto.RegisterType((*RankingInfoRes_HdtDigInfo)(nil), "external.RankingInfoRes.HdtDigInfo")
	proto.RegisterType((*AppListRes)(nil), "external.AppListRes")
	proto.RegisterType((*AppListRes_AppNameIcon)(nil), "external.AppListRes.AppNameIcon")
}

var fileDescriptor0 = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0x5f, 0x4f, 0xd4, 0x40,
	0x10, 0xa7, 0x1c, 0x77, 0x94, 0x39, 0x38, 0x71, 0x45, 0xd3, 0xf4, 0xc1, 0x5c, 0xea, 0x9f, 0xf8,
	0x74, 0xd1, 0x33, 0x1a, 0xc5, 0x18, 0x03, 0x12, 0x91, 0x04, 0x04, 0x97, 0xd3, 0xf8, 0xba, 0xb6,
	0x7b, 0x65, 0x43, 0xd9, 0xd6, 0x76, 0x0b, 0xdc, 0x27, 0xf2, 0xc1, 0x8f, 0xe2, 0x17, 0xf0, 0xe3,
	0xb8, 0xbb, 0x6d, 0xaf, 0x0b, 0xf4, 0x2e, 0xfa, 0x36, 0xf3, 0xdb, 0xf9, 0xcd, 0xce, 0xce, 0xcc,
	0xaf, 0x85, 0xdb, 0x21, 0x11, 0xf4, 0x82, 0x4c, 0x86, 0x24, 0x49, 0x06, 0x49, 0x1a, 0x8b, 0x18,
	0xd9, 0xf4, 0x52, 0xd0, 0x94, 0x93, 0xc8, 0x1b, 0x80, 0xbd, 0x1f, 0x87, 0x8c, 0x63, 0xfa, 0x03,
	0xad, 0x43, 0x4b, 0xd0, 0xc8, 0xb1, 0xfa, 0xd6, 0x93, 0x15, 0xac, 0x4c, 0x85, 0x24, 0x17, 0x81,
	0xb3, 0x58, 0x20, 0xd2, 0xf4, 0xfa, 0x60, 0xef, 0xf1, 0x80, 0x5e, 0xaa, 0xf8, 0x0d, 0x68, 0x33,
	0x65, 0x6b, 0x46, 0x1b, 0x17, 0x8e, 0xf7, 0xc7, 0x02, 0xfb, 0x4b, 0x46, 0xd3, 0x3d, 0x3e, 0x8e,
	0x55, 0x82, 0x9c, 0x05, 0x3a, 0xa0, 0x85, 0x95, 0x89, 0x5c, 0xb0, 0x39, 0xf3, 0x4f, 0x3f, 0x91,
	0x33, 0x5a, 0xe6, 0x9d, 0xfa, 0xe8, 0x1e, 0x74, 0xc8, 0x39, 0x11, 0x24, 0x75, 0x5a, 0xfa, 0xa4,
	0xf4, 0x10, 0x82, 0xa5, 0x8c, 0x85, 0xdc, 0x59, 0xd2, 0xa8, 0xb6, 0xd5, 0xe5, 0xf4, 0x8c, 0xb0,
	0xc8, 0x69, 0x6b, 0xb0, 0x70, 0x90, 0x03, 0xcb, 0x29, 0x0d, 0x47, 0x4c, 0x26, 0xef, 0xe8, 0x3b,
	0x2b, 0x17, 0xdd, 0x07, 0x38, 0x09, 0xc4, 0x36, 0x89, 0x08, 0xf7, 0xa9, 0xb3, 0x2c, 0x0f, 0x2d,
	0x6c, 0x20, 0xc8, 0x83, 0xd5, 0x94, 0x92, 0x88, 0xcb, 0x3a, 0xb6, 0x72, 0x71, 0xe2, 0xd8, 0xfa,
	0x4d, 0x57, 0x30, 0x6f, 0x34, 0x6d, 0x56, 0xa6, 0x6e, 0xa2, 0x69, 0xfa, 0x3e, 0x0e, 0x68, 0xf9,
	0xfc, 0xca, 0x45, 0xb2, 0xa5, 0x79, 0xf9, 0x7e, 0xfd, 0xc2, 0xee, 0x10, 0x0d, 0xaa, 0x7e, 0x0f,
	0xaa, 0xce, 0xe0, 0x69, 0x8c, 0x47, 0xa1, 0x8b, 0x69, 0xc8, 0x32, 0x19, 0xf1, 0x8f, 0x53, 0x40,
	0x3d, 0x58, 0x64, 0x49, 0xd9, 0x24, 0x69, 0xa9, 0xe2, 0xab, 0x14, 0x1f, 0xd2, 0xf8, 0x4c, 0x37,
	0x4a, 0x16, 0x6f, 0x62, 0xde, 0x23, 0x58, 0xc1, 0x54, 0xe4, 0xe9, 0xfc, 0xea, 0xbd, 0x21, 0xc0,
	0x67, 0x46, 0xf8, 0x65, 0x3e, 0x63, 0x25, 0xe4, 0x2c, 0x7c, 0x45, 0x2b, 0xaa, 0xd1, 0xb6, 0xe4,
	0xd8, 0xa3, 0xf8, 0x94, 0xce, 0x60, 0xc8, 0x49, 0x09, 0x75, 0x5a, 0x52, 0x0a, 0xc7, 0x73, 0xa1,
	0x33, 0xa2, 0x51, 0x23, 0xc3, 0xdb, 0x9c, 0xe6, 0x9b, 0xd7, 0xe7, 0xe6, 0xbc, 0xbf, 0x17, 0xa1,
	0x87, 0x09, 0x3f, 0x65, 0x3c, 0xd4, 0x7d, 0x9e, 0x9b, 0xe2, 0x00, 0x6e, 0x95, 0xb1, 0x87, 0xe3,
	0x8f, 0x81, 0xd8, 0x61, 0xa1, 0x4c, 0xd6, 0x92, 0x13, 0x7b, 0x50, 0x4f, 0xec, 0x6a, 0xb2, 0x41,
	0x11, 0xa6, 0xbd, 0xeb, 0x5c, 0x39, 0x79, 0xb4, 0x43, 0xc3, 0x94, 0xd2, 0xc3, 0xf1, 0x0e, 0x1b,
	0x8f, 0x99, 0x9f, 0x47, 0x62, 0xa2, 0xc7, 0x64, 0xe1, 0x86, 0x13, 0xd4, 0x87, 0xee, 0x01, 0xe3,
	0x3a, 0xb9, 0x92, 0x51, 0x31, 0x35, 0x13, 0x42, 0x0f, 0x61, 0x4d, 0xe6, 0x2e, 0x90, 0x7d, 0x92,
	0x09, 0xbd, 0xed, 0x16, 0xbe, 0x0a, 0xa2, 0xc7, 0xd0, 0x9b, 0x02, 0xa3, 0x58, 0x90, 0x48, 0x2f,
	0xbf, 0x85, 0xaf, 0xa1, 0xee, 0x53, 0x80, 0xba, 0xfc, 0xe6, 0x45, 0x93, 0x8a, 0xd0, 0xfd, 0xb4,
	0xb0, 0x32, 0xbd, 0x5f, 0x16, 0xc0, 0x56, 0x92, 0xec, 0xcb, 0x35, 0x9a, 0xdf, 0xc9, 0x4d, 0x58,
	0x96, 0x71, 0x91, 0x8c, 0x2b, 0x3b, 0xd8, 0xaf, 0x3b, 0x58, 0x27, 0x50, 0xa6, 0x52, 0xfa, 0x9e,
	0x1f, 0x73, 0x5c, 0x11, 0xdc, 0x5d, 0xe8, 0x1a, 0xb8, 0xba, 0xa4, 0x74, 0xcb, 0xda, 0x2a, 0x57,
	0x69, 0x58, 0x9a, 0x32, 0xe8, 0x88, 0x48, 0x85, 0x16, 0x63, 0x37, 0x90, 0xe1, 0xcf, 0x25, 0x58,
	0x53, 0x02, 0x3b, 0xa6, 0xe9, 0xb9, 0x4f, 0x71, 0xe2, 0xa3, 0x67, 0xd0, 0xd6, 0x8a, 0x45, 0x86,
	0x04, 0xab, 0xef, 0x9d, 0x7b, 0x13, 0xcb, 0xbc, 0x05, 0xf4, 0x0a, 0xec, 0x4a, 0x37, 0xe8, 0xae,
	0xb1, 0x06, 0xb5, 0x44, 0xdd, 0x3b, 0x26, 0x5c, 0x4a, 0x4a, 0x32, 0xdf, 0x40, 0xef, 0x20, 0x0e,
	0xd8, 0x78, 0x72, 0x74, 0x11, 0x6c, 0x4f, 0x46, 0x4a, 0x2c, 0x0d, 0xb7, 0xce, 0x20, 0xbf, 0x85,
	0xde, 0x56, 0x10, 0x28, 0xe9, 0x7d, 0xcb, 0x79, 0xb1, 0xdf, 0x75, 0x60, 0xad, 0xc8, 0x59, 0xf4,
	0x77, 0xb0, 0x5e, 0x72, 0x8f, 0x79, 0xf6, 0x95, 0xa6, 0xb2, 0x8a, 0xff, 0x4b, 0xf0, 0x1a, 0x56,
	0x8f, 0xa9, 0x50, 0xdd, 0xd3, 0xd2, 0x33, 0x4b, 0xaf, 0xb4, 0x3d, 0x8b, 0xfa, 0x12, 0x56, 0x77,
	0x4d, 0xea, 0xba, 0x41, 0xd5, 0x12, 0x77, 0x6f, 0x26, 0x53, 0xbc, 0x6d, 0x40, 0x25, 0xcf, 0xd0,
	0x58, 0x03, 0xdb, 0x99, 0x25, 0x46, 0x99, 0xe3, 0x85, 0x5e, 0x16, 0xb5, 0x5e, 0x66, 0xc5, 0xd5,
	0x2f, 0xca, 0xdd, 0x68, 0xda, 0x42, 0x6f, 0xe1, 0x7b, 0x47, 0xff, 0x07, 0x9f, 0xff, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0xcb, 0x9b, 0x64, 0x48, 0x1c, 0x07, 0x00, 0x00,
}
